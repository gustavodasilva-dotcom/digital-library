// <auto-generated />
using System;
using DigitalLibrary.Modules.Patrons.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Modules.Patrons.Persistence.Migrations
{
    [DbContext(typeof(PatronsDbContext))]
    [Migration("20240613022712_PatronLendsTable")]
    partial class PatronLendsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("patrons")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalLibrary.Modules.Patrons.Domain.Entities.Patron", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("RegistrationNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique();

                    b.ToTable("Patrons", "patrons");
                });

            modelBuilder.Entity("DigitalLibrary.Modules.Patrons.Domain.Entities.PatronLend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndLendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LendId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatronId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartLendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatronId", "LendId")
                        .IsUnique();

                    b.ToTable("PatronLends", "patrons", t =>
                        {
                            t.HasCheckConstraint("CK_PatronLends_LendId_NotEmptyGuid", "LendId <> '00000000-0000-0000-0000-000000000000'");
                        });
                });

            modelBuilder.Entity("DigitalLibrary.Modules.Patrons.Domain.Entities.PatronLend", b =>
                {
                    b.HasOne("DigitalLibrary.Modules.Patrons.Domain.Entities.Patron", null)
                        .WithMany("Lends")
                        .HasForeignKey("PatronId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalLibrary.Modules.Patrons.Domain.Entities.Patron", b =>
                {
                    b.Navigation("Lends");
                });
#pragma warning restore 612, 618
        }
    }
}
